
@model ProductVM


<form method="post" enctype="multipart/form-data">
    <input asp-for="Product.Id" hidden />
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">@(Model.Product.Id != 0?"Update":"Create") Product</h2>
            </hr>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.Title" class="p-0"></label>
            <input asp-for="Product.Title" class="form-control" />
            <span asp-validation-for="Product.Title" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.Description" class="p-0"></label>
            <textarea asp-for="Product.Description" class="form-control" ></textarea>
        
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.ISBN" class="p-0"></label>
            <input asp-for="Product.ISBN" class="form-control" />
            <span asp-validation-for="Product.ISBN" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.Author" class="p-0"></label>
            <input asp-for="Product.Author" class="form-control" />
            <span asp-validation-for="Product.Author" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.ListPrice" class="p-0"></label>
            <input asp-for="Product.ListPrice" class="form-control" />
            <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.Price" class="p-0"></label>
            <input asp-for="Product.Price" class="form-control" />
            <span asp-validation-for="Product.Price" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.Price50" class="p-0"></label>
            <input asp-for="Product.Price50" class="form-control" />
            <span asp-validation-for="Product.Price50" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.Price100" class="p-0"></label>
            <input asp-for="Product.Price100" class="form-control" />
            <span asp-validation-for="Product.Price100" class="text-danger"></span>
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.ImageUrl" class="p-0"></label>
            <input type="file" class="form-control" />
          
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Product.CategoryId" class="p-0"></label>
            <Select asp-for="Product.CategoryId" asp-items="@Model.CategoryList"  class="form-select" >
                <option disabled selected>--Select Category</option>
                
            </select>
            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
        </div>
        <div class="row">
            <div class="col-6 col-md-6">
                @if(Model.Product.Id != 0)
                {
                     <button type ="submit" class="btn btn-primary form-control">Update</button>
                }
                else
                {
                    <button type ="submit" class="btn btn-primary form-control">Create</button>
                }
                

            </div>
            <div class="col-6 col-md-6">
                <a asp-controller="Product" asp-action="Index" class="btn btn-secondary form-control">Back to List</a>
            </div>
        </div>

    </div>
</form>
@section Scripts {
    <!-- Place the first <script> tag in your HTML's <head> -->
<script src="https://cdn.tiny.cloud/1/46hqmmwuz4nisr9tpjpwdb5gqn8k033nqi5rjnk7xvxu9h5w/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>

<!-- Place the following <script> and <textarea> tags your HTML's <body> -->
<script>
  tinymce.init({
    selector: 'textarea',
    plugins: [
      // Core editing features
      'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
      // Your account includes a free trial of TinyMCE premium features
      // Try the most popular premium features until Mar 12, 2025:
      'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
    ],
    toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough  | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap ',
    tinycomments_mode: 'embedded',
    tinycomments_author: 'Author name',
    mergetags_list: [
      { value: 'First.Name', title: 'First Name' },
      { value: 'Email', title: 'Email' },
    ],
    ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
  });
</script>

    @{
        <partial name="_ValidationScriptsPartial" />

    }
}